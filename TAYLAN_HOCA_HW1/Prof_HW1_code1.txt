import matplotlib.pyplot as plt
import numpy as np
from scipy.special import gammaln
from scipy.integrate import simps

def log_beta_pdf(x, a, b):
    return (np.log(2)- gammaln(a) - gammaln(b) + gammaln(a+b) + np.log(x)*(a-1) + np.log(1-x)*(b-1))


x = np.arange(0.2,0.7,0.001)
a = 1
b = 1
c_0 = 1
c_1 = 1
N = c_0 + c_1
my_vector1=np.exp((np.log(2)- gammaln(a) - gammaln(b) + gammaln(a+b) + np.log(x)*(a-1) + np.log(1-x)*(b-1)))
my_vector2=np.exp(log_beta_pdf((x-np.min(x))/(np.max(x)-np.min(x)),a+c_1,b+c_0))
pi_ML = c_1/N

plt.figure(figsize=(12,8))
plt.plot(x, np.exp(log_beta_pdf(x, a, b)), 'b')
plt.plot(x, my_vector2, 'r')
yl = plt.gca().get_ylim()
plt.plot([pi_ML, pi_ML], yl , 'k:')
plt.legend(["Prior $\cal B$ $(a={}, b={})$".format(a,b), "Posterior $\cal B$ $(a={}, b={})$".format(a+c_1, b+c_0)], loc="best")
plt.show()
# to be sure that area is still equals to 1
area = simps(my_vector1, dx=0.001)
print("area =", area)